CREATE DATABASE IF NOT EXISTS salnikova2 CHARACTER SET UTF8;
USE salnikova2;

CREATE TABLE IF NOT EXISTS users(
	name VARCHAR(15) PRIMARY KEY,
	password VARCHAR(60) NOT NULL
);


CREATE TABLE IF NOT EXISTS user_roles(
	name VARCHAR(15) NOT NULL,
	role_name VARCHAR(15) NOT NULL,
	PRIMARY KEY (name, role_name)
);

CREATE TABLE IF NOT EXISTS tutors(
        id INT PRIMARY KEY AUTO_INCREMENT,
        firstName VARCHAR(255),
        middleName VARCHAR(255),
        lastName VARCHAR(255),
        degree VARCHAR(255),
        post VARCHAR(255),
        email VARCHAR(50),
        login VARCHAR(15),
        FOREIGN KEY(login) REFERENCES users(name) ON DELETE SET NULL
);



CREATE TABLE IF NOT EXISTS controls (
	id INT PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(255),
	maxPoints REAL,
	ownerId INT,
	number INT,
	
	FOREIGN KEY(ownerId) REFERENCES tutors(id) ON DELETE SET NULL	
);

CREATE TABLE IF NOT EXISTS departments (
	id INT PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(255),
	fullname VARCHAR(255)

);

CREATE TABLE IF NOT EXISTS groups (
	id INT PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(255),
	depId INT,
	grade INT,
	tutorId INT,

	FOREIGN KEY(depId) REFERENCES departments(id) ON DELETE SET NULL,
	FOREIGN KEY(tutorId) REFERENCES tutors(id) ON DELETE SET NULL	
);


CREATE TABLE IF NOT EXISTS students (
	id INT PRIMARY KEY AUTO_INCREMENT,
	firstName VARCHAR(255),
	secondName VARCHAR(255),
	groupId INT,

	FOREIGN KEY(groupId) REFERENCES groups(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS attestations(
	id INT PRIMARY KEY AUTO_INCREMENT,
	studentId INT,
	points REAL,
	controlId INT,
		
	FOREIGN KEY(studentId) REFERENCES students(id) ON DELETE CASCADE,
	FOREIGN KEY(controlId) REFERENCES controls(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS documents(
	id INT PRIMARY KEY AUTO_INCREMENT,
	controlId INT,
	size LONG,
	name VARCHAR(255),
	FOREIGN KEY(controlId) REFERENCES controls(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS docdata(
	id INT,
	content MEDIUMBLOB,
	FOREIGN KEY(id) REFERENCES documents(id) ON DELETE CASCADE
);








